{
    "devDependencies": {
        "babel-eslint": "^8.2.3",
        "eslint": "^4.19.1",
        "eslint-config-prettier": "^3.0.1",
        "eslint-plugin-prettier": "^2.6.2",
        "js-beautify": "^1.8.6",
        "lerna": "^2.11.0",
        "minimist": "^1.2.0",
        "mkdirp": "^0.5.1",
        "pre-commit": "^1.2.2",
        "prettier": "^1.14.2",
        "rimraf": "^2.6.2"
    },
    "pre-commit": [
        "precommit"
    ],
    "scripts": {
        "build,test": "npm run --silent build && npm run --silent test",
        "build,test,bench": "npm run --silent build && npm run --silent test && npm run --silent bench",
        "build,bench": "npm run --silent build && npm run --silent bench",
        "build": "bash -c '[[ -z \"${PSP_DOCKER}\" ]] && npm run --silent _build || npm run --silent _emsdk -- npm run --silent _build'",
        "bench:build": "lerna run bench:build ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} --stream",
        "bench:run": "lerna exec ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} -- npm run bench:run",
        "bench": "npm-run-all --silent bench:build bench:run",
        "precompile": "mkdir -p obj",
        "compile": "cd obj/ && emcmake cmake ../ && emmake make -j${PSP_CPU_COUNT-8}",
        "postcompile": "node scripts/compile",
        "docs": "lerna run docs --silent --stream",
        "test:build": "bash -c '[[ -z \"${PSP_DOCKER}\" ]] && npm run --silent _build_test || npm run --silent _emsdk -- npm run --silent _build_test'",
        "test:run": "npm run --silent clean:screenshots && npm run --silent _puppeteer -- node_modules/.bin/lerna exec --concurrency 1 --no-bail ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} -- npm run --silent test:run",
        "test:run_quiet": "npm run --silent _puppeteer -- node_modules/.bin/lerna run test:run",
        "test": "npm-run-all --silent lint test:build test:run",
        "clean": "lerna run clean ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} --stream",
        "clean:screenshots": "lerna run clean:screenshots ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}}",
        "start": "lerna run start --stream --scope",
        "write_tests": "WRITE_TESTS=1 npm run test:run",
        "postinstall": "lerna bootstrap --hoist",
        "precommit": "npm run lint:autofix && npm run docs && git add . -u",
        "lint": "eslint packages/*/src/**/*.js packages/*/test/**/*.js examples/*/*.js",
        "lint:autofix:es": "npm run lint -- --fix",
        "lint:autofix:clang": "lerna run lint:autofix:clang",
        "lint:autofix:less": "prettier  --tab-width 4 --write packages/**/src/less/*.less",
        "lint:autofix:html": "html-beautify packages/**/src/html/*.html -r",
        "lint:autofix:json": "prettier --tab-width 4 --write **/package.json",
        "lint:autofix:markdown": "prettier --tab-width 4 --write docs/*.md",
        "lint:autofix": "npm-run-all --silent lint:autofix:*",
        "_build": "lerna run build ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} --stream",
        "_build_test": "lerna run test:build ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} --stream",
        "_emsdk": "docker run --rm -it ${PSP_CPU_COUNT:+--cpus=\"${PSP_CPU_COUNT}.0\"} -v $(pwd):/src -e PACKAGE=${PACKAGE} perspective/emsdk",
        "_puppeteer": "docker run -it --rm --shm-size=2g ${PSP_CPU_COUNT:+--cpus=\"${PSP_CPU_COUNT}.0\"} -u root -e WRITE_TESTS=${WRITE_TESTS} -e PACKAGE=${PACKAGE} -v $(pwd):/src -w /src perspective/puppeteer"
    }
}
